apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-db
  namespace: eshoponsteroids
spec:
  selector:
    matchLabels:
      app: identity-db  # tell this deployment to target the pods with the label app: identity-db
  replicas: 1 # only one instance of the pod
  template: # template for the pods created by this deployment
    metadata:
      labels:
        app: identity-db
    spec:
      containers:
        - name: identity-db
          image: postgres:16.0
          ports:  # expose the port 5432
            - containerPort: 5432
          volumeMounts: # mount the volume to the container
            - name: identity-db
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: IDENTITY_DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: IDENTITY_DB_PASSWORD
            - name: POSTGRES_DB
              value: identity
          readinessProbe: # check if the container is ready to accept traffic
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: identity-db
          persistentVolumeClaim:
            claimName: identity-db-pvc

---

# service to expose deployment
apiVersion: v1
kind: Service
metadata:
  name: identity-db
  namespace: eshoponsteroids
spec:
  type: ClusterIP # expose the service inside the cluster
  selector:
    app: identity-db  # tell this service to target the pods with the label app: identity-db
  ports:
    - port: 5432  # port exposed by the service
      targetPort: 5432    # port exposed by the container
