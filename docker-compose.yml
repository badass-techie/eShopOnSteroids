version: '3.8'
services:
  zipkin:
    image: openzipkin/zipkin-slim:2.24.2
    restart: unless-stopped
    ports:
      - "9411:9411"

  rabbitmq:
    image: masstransit/rabbitmq:3
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_LOGS=warning # suppress log spamming
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 1s
      timeout: 3s
      retries: 30

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: api-gateway
    image: badasstechie/eshoponsteroids-api-gateway
    restart: on-failure
    ports:
      - "8080:8080"
    env_file:
      - .env
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: api-gateway

  cart-db:
    image: redis:7.2.1
    restart: unless-stopped
    volumes:
      - cart-db:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  cart:
    build:
      context: .
      dockerfile: Dockerfile
      target: cart
    image: badasstechie/eshoponsteroids-cart
    restart: on-failure
    env_file:
      - .env
    depends_on:
      cart-db:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: cart

  identity-db:
    image: postgres:16.0
    restart: unless-stopped
    volumes:
      - identity-db:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$IDENTITY_DB_USERNAME
      - POSTGRES_PASSWORD=$IDENTITY_DB_PASSWORD
      - POSTGRES_DB=identity
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1s
      timeout: 3s
      retries: 30

  identity:
    build:
      context: .
      dockerfile: Dockerfile
      target: identity
    image: badasstechie/eshoponsteroids-identity
    restart: on-failure
    env_file:
      - .env
    depends_on:
      identity-db:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: identity

  order-db:
    image: postgres:16.0
    restart: unless-stopped
    volumes:
      - order-db:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$ORDER_DB_USERNAME
      - POSTGRES_PASSWORD=$ORDER_DB_PASSWORD
      - POSTGRES_DB=order
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1s
      timeout: 3s
      retries: 30

  order:
    build:
      context: .
      dockerfile: Dockerfile
      target: order
    image: badasstechie/eshoponsteroids-order
    restart: on-failure
    env_file:
      - .env
    depends_on:
      order-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: order

  product-db:
    image: mongo:5.0-focal
    restart: unless-stopped
    volumes:
      - product-db:/data/db
    command: ["mongod", "--logpath", "/var/log/mongodb/mongod.log", "--logappend", "--quiet"] # suppress log spamming
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 1s
      timeout: 3s
      retries: 30

  product:
    build:
      context: .
      dockerfile: Dockerfile
      target: product
    image: badasstechie/eshoponsteroids-product
    restart: on-failure
    env_file:
      - .env
    depends_on:
      product-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: product

  payment:
    build:
      context: .
      dockerfile: Dockerfile
      target: payment
    image: badasstechie/eshoponsteroids-payment
    restart: on-failure
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: payment

  prometheus:
    image: prom/prometheus:v2.47.2
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.1.5
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_LOG_LEVEL=warn # suppress log spamming
    depends_on:
      - prometheus

  elasticsearch:
    image: elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  fluentd:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    restart: unless-stopped
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.17.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - elasticsearch-data:/usr/share/kibana/data
    restart: unless-stopped
    depends_on:
      - elasticsearch


volumes:
  rabbitmq-data:
  cart-db:
  identity-db:
  order-db:
  product-db:
  grafana-data:
  elasticsearch-data:
